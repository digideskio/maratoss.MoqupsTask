@using Moqups.App.Helpers
@using Moqups.App.Models
@using Moqups.Entities
@using Page = Moqups.Entities.Page
@model EditUserModel

<style type="text/css">
    select.listbox {
        width: 100%;
        height: 100%;
        margin: 0 auto;
    }

    td.ui-droppable {
        border: gray 1px solid;
        width: 100px;
        height: 100px;
    }

    #progressbar {
        display: none;
        position: absolute;
        top:0; right:0;
        bottom:0; left:0;
        -ms-opacity: 0.1;
        opacity: 0.1;
        background: black;
    }
</style>

<script>
    $(function () {
        $('.ui-draggable').draggable({
            helper : 'clone',
            opacity : 0.3
        });
        
        $('.ui-droppable').droppable({
            tolerance : 'fit',
            accept : '.ui-draggable',
            drop : function(event, ui) {
                $(this).append(ui.draggable);
            }
        });

        $('[title]').tooltip({ position: { my: "left+15 center", at: "right center" } });
    });
    
    function deleteEntity(idEntity) {
        if (confirm("Are you sure?")) {
            window.location.href = '@Url.Action("DeleteUser", "Home")/' + idEntity;
        }
    }

    function OnSuccessOperation(data) {
        if (data.error) {
            alert(data.error);
        } else {
            window.location.href = '@Url.Action("Index", "Home")';
        }
    }
    
    function OnFailedOperation(data) {
        alert(data);
    }

    function OnCompleteOperation(data) {
        $('#availablePages :input').attr('disabled', false);
    }
    
    function submitForm() {
        $('#availablePages :input').attr('disabled', true);
    }
    
    function OnBegin() {
    }
</script>

@{Html.EnableClientValidation();}
@{Html.EnableUnobtrusiveJavaScript();}
@{
    var ajaxOptions = new AjaxOptions
    {
        Url = @Url.Action("SaveOrUpdateAjax"),
        OnSuccess = "OnSuccessOperation",
        OnFailure = "OnFailedOperation",
        OnComplete = "OnCompleteOperation",
        LoadingElementId = "progressbar",
        OnBegin = "OnBegin",
        HttpMethod = "POST"
    };
}

@using (Ajax.BeginForm("SaveOrUpdate", "Home", ajaxOptions))
{
    <div id="progressbar">
        <div class="loading">
            loading...
        </div>
    </div>
    @Html.HiddenIndexerInputForModel()
    @Html.HiddenFor(x => x.Id)
    @Html.ValidationSummary(true)
    <table width="100%">
        <tr>
            <td>Firstname</td>
            @{
    string tooltip = TooltipService.GetTooltipFor<User>(x => x.Firstname, Model.Id > 0 ? "EDIT" : "ADD");
            }
            <td>@Html.TextBoxFor(x => x.Firstname, new { id = "firstname", title = tooltip })
                @Html.ValidationMessageFor(x => x.Firstname)
            </td>
        </tr>
        <tr>
            <td>Lastname</td>
            @{
    tooltip = TooltipService.GetTooltipFor<User>(x => x.Lastname, Model.Id > 0 ? "EDIT" : "ADD");
            }

            <td>@Html.TextBoxFor(x => x.Lastname, new { title = tooltip })
                @Html.ValidationMessageFor(x => x.Lastname)
            </td>
        </tr>
        <tr>
            <td>Status</td>
            <td>@Html.DropDownEnumListFor(x => x.Status)</td>
        </tr>
        <tr>
            <td></td>
            <td>@Html.CheckBoxFor(x => x.IsAdmin, new { @checked = @Model.IsAdmin.ToString() })Admin</td>
        </tr>
        <tr>
            <td>User's pages</td>
            <td>Available pages</td>
        </tr>
        <tr>
            <td class="ui-droppable" id="userPages">

                @for (int i = 0; i < @Model.Pages.Count; i++)
                {
                    <div class="ui-draggable">
                        @Model.Pages[i].Name
                        <input type="hidden" name="Pages.Index" value="@Model.Pages[i].Id"/>
                        <input type="hidden" name="Pages[@Model.Pages[i].Id].Id" value="@Model.Pages[i].Id"/>
                        <input type="hidden" name="Pages[@Model.Pages[i].Id].Name" value="@Model.Pages[i].Name"/>
                    </div>
                }
            </td>
            <td class="ui-droppable" id="availablePages">
                @for (int i = 0; i < @Model.AvailablePages.Count; i++)
                {
                    <div class="ui-draggable">
                        @Model.AvailablePages[i].Name
                        <input type="hidden" name="Pages.Index" value="@Model.AvailablePages[i].Id"/>
                        <input type="hidden" name="Pages[@Model.AvailablePages[i].Id].Id" value="@Model.AvailablePages[i].Id"/>
                        <input type="hidden" name="Pages[@Model.AvailablePages[i].Id].Name" value="@Model.AvailablePages[i].Name"/>
                    </div>
                }
            </td>
        </tr>
    </table>
    
    <div id="buttons">
        <input type="submit" value="Save" onclick="submitForm()" />
        <input type="button" value="Cancel" id="cancelButton" onclick="window.history.back()" />
        @if (Model.Id > 0)
        {
            <input type="button" value="Delete" onclick="deleteEntity(@Model.Id)" />
        }
    </div>
}