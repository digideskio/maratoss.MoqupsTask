@using Moqups.App.Models
@using Moqups.Entities
@using Page = Moqups.Entities.Page
@model EditUserModel

<style type="text/css">
    select.listbox {
        width: 100%;
        height: 100%;
        margin: 0 auto;
    }

    td.ui-droppable {
        border: gray 1px solid;
        width: 100px;
        height: 100px;
    }
</style>

<script>
    $(function () {
        $('.ui-draggable').draggable({
            helper : 'clone',
            opacity : 0.3
        });
        
        $('.ui-droppable').droppable({
            tolerance : 'fit',
            accept : '.ui-draggable',
            drop : function(event, ui) {
                $(this).append(ui.draggable);
            }
        });

        $('[title]').tooltip();
    });
    
    function deleteEntity(idEntity) {
        if (confirm("Are you sure?")) {
            window.location.href = '@Url.Action("DeleteUser", "Home")/' + idEntity;
        }
    }

    function submitForm() {
        $('#availablePages').find('input').removeAttr('name');
        $('form').submit();
    }

    function OnSuccessOperation(data) {
        $('#availablePages').find('input').attr('name', 'SelectedPageIds');
        if (data.error) {
            alert(data.error);
        } else {
            window.location.href = '@Url.Action("Index", "Home")';
    }
}
</script>
<div id="result">
</div>
@{Html.EnableClientValidation();}
@{Html.EnableUnobtrusiveJavaScript();}
@using (Ajax.BeginForm("SaveOrUpdate", "Home", new AjaxOptions
{
    OnSuccess = "OnSuccessOperation",
    HttpMethod = "POST",
    UpdateTargetId = "result"
}))
{
    @Html.HiddenFor(x => x.Id)
    @Html.ValidationSummary(true)
    <table width="100%">
        <tr>
            <td>Firstname</td>
            @{
                string tooltip = TooltipService.GetTooltipFor<User>(x => x.Firstname, Model.Id > 0 ? "EDIT" : "ADD");
            }
            <td>@Html.TextBoxFor(x => x.Firstname, new { id = "firstname", title = tooltip })
                @Html.ValidationMessageFor(x => x.Firstname)
            </td>
        </tr>
        <tr>
            <td>Lastname</td>
            @{
                tooltip = TooltipService.GetTooltipFor<User>(x => x.Lastname, Model.Id > 0 ? "EDIT" : "ADD");
            }

            <td>@Html.TextBoxFor(x => x.Lastname, new { title = tooltip })
                @Html.ValidationMessageFor(x => x.Lastname)
            </td>
        </tr>
        <tr>
            <td>Status</td>
            <td>@Html.DropDownListFor(x => x.Status, @Model.StatusList)</td>
        </tr>
        <tr>
            <td></td>
            <td>@Html.CheckBoxFor(x => x.IsAdmin)Admin</td>
        </tr>
        <tr>
            <td>User's pages</td>
            <td>Available pages</td>
        </tr>
        <tr>
            <td class="ui-droppable" id="userPages">
                @for (int i = 0; i < @Model.Pages.Count; i++)
                {
                    <div class="ui-draggable">
                        @Model.Pages[i].Name
                        <input type="hidden" name="SelectedPageIds" value="@Model.Pages[i].Id"/>
                    </div>
                }
            </td>
            <td class="ui-droppable" id="availablePages">
                @for (int i = 0; i < @Model.AvailablePages.Count; i++)
                {
                    <div class="ui-draggable">
                        @Model.AvailablePages[i].Name
                        <input type="hidden" name="SelectedPageIds" value="@Model.AvailablePages[i].Id" />
                    </div>
                }
            </td>
        </tr>
    </table>
    
    <div id="buttons">
        <input type="button" value="Save" onclick="submitForm()" />
        <input type="button" value="Cancel" id="cancelButton" onclick="window.history.back()" />
        @if (Model.Id > 0)
        {
            <input type="button" value="Delete" onclick="deleteEntity(@Model.Id)" />
        }
    </div>
}